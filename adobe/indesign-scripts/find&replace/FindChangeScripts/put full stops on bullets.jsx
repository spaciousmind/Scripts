//This script was auto generated by chainGREP.jsx//chainGREP.jsx is provided by Gregor Fellenz https://www.publishingx.de///Download at https://www.publishingx.de/download/chain-grepmain();function main() {	if (app.layoutWindows.length == 0) return;	if (app.selection.length == 0) {		var scope = app.documents[0];	}	else {		var w = new Window ('dialog', localize(({en:"Scope of Find/Change", de:"Bereich der Ersetzung", fr:"Portée de Rechercher/Remplacer", ja_JP:"検索置換の範囲"})) );		var scopeGroup = w.add ('Panel', undefined, localize(({en:"Scope of Find/Change", de:"Bereich der Ersetzung", fr:"Portée de Rechercher/Remplacer", ja_JP:"検索置換の範囲"})) );		scopeGroup.alignment = 'fill';		scopeGroup.alignChildren = 'fill';		scopeGroup.margins = [10,20,10,10];		with (scopeGroup) {			rButScopeDoc = add( 'radiobutton', undefined, localize(({en:"Document", de:"Dokument", fr:"Document", ja_JP:"ドキュメント"})) );			rButScopeDoc.value = true;			rButScopeSel= add( 'radiobutton', undefined, localize(({en:"Selection", de:"Auswahl", fr:"Sélection", ja_JP:"選択範囲"})) );			rButScopeStory= add( 'radiobutton', undefined, localize(({en:"Story (of Selection)", de:"Textabschnitt", fr:"Article (contenant la sélection)", ja_JP:"ストーリー"})) );		}		var uiCtrlGroup = w.add ('group');		with (uiCtrlGroup) {			var cancelBtn = uiCtrlGroup.add ('button', undefined, localize(({en:"Cancel", de:"Abbrechen", fr:"Annuler", ja_JP:"キャンセル"})));			var okButton = uiCtrlGroup.add ('button', undefined, localize(({en:"Run", de:"Starten", fr:"Démarrer", ja_JP:"実行"})) );			cancelBtn.onClick = function () {				w.close(2);			}			okButton.onClick = function () {				if (rButScopeDoc.value) scope = app.documents[0];				else if (rButScopeSel.value) scope = app.selection[0];				else if (rButScopeStory.value) scope = app.selection[0].parentStory;				w.close(1);			}		}		if(w.show() != 1) {			return		}	}	var changeObject = scope; 	if (changeObject.hasOwnProperty('characters') && changeObject.characters.length == 0) return;	var doc = app.documents[0];	var style;	var options = app.findChangeGrepOptions.properties;	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[add full stop to ends of paras and cells]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"([^.,;?!:~e])(\\s?)$"});		app.changeGrepPreferences.properties = ({changeTo:"$1."});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[add space after comma]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(,)(\\w+)"});		app.changeGrepPreferences.properties = ({changeTo:"$1 $2"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[apply CAPS to first letter of new para]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^\\S"});		app.changeGrepPreferences.properties = ({});		style = getStyleByString(doc, 'CAPS', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), 'CAPS', 'apply CAPS to first letter of new para') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[change all up until dot]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^.+?. "});		app.changeGrepPreferences.properties = ({changeTo:"$0"});		style = getStyleByString(doc, 'body copy bold', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), 'body copy bold', 'change all up until dot') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[change e. g. to e.g.]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"e. g."});		app.changeGrepPreferences.properties = ({changeTo:"e.g."});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[change everything up until a dot]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^.+?. "});		app.changeGrepPreferences.properties = ({changeTo:"$0\\n"});		style = getStyleByString(doc, 'numbers', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), 'numbers', 'change everything up until a dot') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		style = getStyleByString(doc, 'numbers para', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change pagraphstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'numbers para', 'change everything up until a dot') );		app.changeGrepPreferences.appliedParagraphStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[clear character styles on full stops]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(\\.)"});		app.changeGrepPreferences.properties = ({changeTo:"$0"});		style = getStyleByString(doc, '[No character style]', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), '[No character style]', 'clear character styles on full stops') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[delete everything before dot return]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^.+?. \\r"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[delete spaces at end of each story]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\s+\\Z"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find ALL CAPS words]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\<[A-Z]{2,}\\>"});		style = getStyleByString(doc, 'body copy table', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find pagraphstyle [%1] for query [%2]", de:"Fehlendes Such-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'body copy table', 'find ALL CAPS words') );		app.findGrepPreferences.appliedParagraphStyle =  style;		app.changeGrepPreferences.properties = ({});		style = getStyleByString(doc, 'subheading white', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change pagraphstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'subheading white', 'find ALL CAPS words') );		app.changeGrepPreferences.appliedParagraphStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find all quotes (straight quote marks)]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(~\")(\\u*\\l*\\s*.*\\w*\\d*)(~\")"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find capital words at end of paragraph]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\<[A-Z]{2,}\\>(?=$)"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find capitals at beginning para of page]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~M\\u+|[.,]\\d+"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find caps or caps questions at end of line]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(\\u\\?|\\u\\u)(?=$)"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find digits followed by a dot]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\s(\\d\\.|\\d\\d\\.)"});		app.changeGrepPreferences.properties = ({fontStyle:"Heavy"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[find everything in [ ] brackets]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\[.+?\\]"});		style = getStyleByString(doc, 'body copy italics', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find characterstyle [%1] for query [%2]", de:"Fehlendes Such-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された文字スタイル[%1]が見つかりませんでした"}), 'body copy italics', 'find everything in [ ] brackets') );		app.findGrepPreferences.appliedCharacterStyle =  style;		app.changeGrepPreferences.properties = ({});		style = getStyleByString(doc, 'Body copy', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), 'Body copy', 'find everything in [ ] brackets') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[FIND TOP PARA ON PAGE]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~M.+(?=\\r)$"});		style = getStyleByString(doc, 'BIG HEADINGs', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find pagraphstyle [%1] for query [%2]", de:"Fehlendes Such-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'BIG HEADINGs', 'FIND TOP PARA ON PAGE') );		app.findGrepPreferences.appliedParagraphStyle =  style;		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[fix e. g to e.g GREP]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"e(\\.) g(\\.)"});		app.changeGrepPreferences.properties = ({changeTo:"e.g."});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[format multiple spaces to single space]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"[~m~>~f~|~S~s~<~/~.~3~4~% ]{2,}"});		app.changeGrepPreferences.properties = ({changeTo:"\\s"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[format table headings waituhi kuratau 2019]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({});		style = getStyleByString(doc, 'bold (black)', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find characterstyle [%1] for query [%2]", de:"Fehlendes Such-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された文字スタイル[%1]が見つかりませんでした"}), 'bold (black)', 'format table headings waituhi kuratau 2019') );		app.findGrepPreferences.appliedCharacterStyle =  style;		app.changeGrepPreferences.properties = ({spaceBefore:2.99999999369444});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[imported triangle glyph to space]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~S"});		app.changeGrepPreferences.properties = ({changeTo:"\\s"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[Insert line break at top of every page]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(~M)(.+(?=\\r)$)", spaceAfter:13.9999999999722});		app.changeGrepPreferences.properties = ({changeTo:"$1\\n$2"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[insert space after full stop]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(\\.)(\\w+)"});		app.changeGrepPreferences.properties = ({changeTo:"$1 $2"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS hapu lc]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"hapu "});		app.changeGrepPreferences.properties = ({changeTo:"hapū "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS Hapu]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"Hapu "});		app.changeGrepPreferences.properties = ({changeTo:"Hapū "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS kokiri lc]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"kokiri "});		app.changeGrepPreferences.properties = ({changeTo:"kōkiri "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS Kokiri]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"Kokiri "});		app.changeGrepPreferences.properties = ({changeTo:"Kōkiri "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS maori]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(?i)maori"});		app.changeGrepPreferences.properties = ({changeTo:"Māori"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS nga lc]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"nga "});		app.changeGrepPreferences.properties = ({changeTo:"ngā "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS Nga Tangata Tiaki]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(?i)Nga Tangata Tiaki"});		app.changeGrepPreferences.properties = ({changeTo:"Ngā Tāngata Tiaki"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS Nga]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"Nga "});		app.changeGrepPreferences.properties = ({changeTo:"Ngā "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS whanau lc]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"whanau"});		app.changeGrepPreferences.properties = ({changeTo:"whānau"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[MACRONS Whanau]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"Whanau"});		app.changeGrepPreferences.properties = ({changeTo:"Whānau"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[NEW add full stops to bullet points]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(?!\\.|\\?|!).(?!\\n)$"});		app.changeGrepPreferences.properties = ({changeTo:"$0."});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[NEW replace multiple spaces with single space]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"  +"});		app.changeGrepPreferences.properties = ({changeTo:" "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[NEW replace soft return with space]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\n"});		app.changeGrepPreferences.properties = ({changeTo:" "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[NEW reset all tracking to zero]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"."});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[prices after $, up until commas]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\$\\d+|[.,]\\d+"});		app.changeGrepPreferences.properties = ({});		style = getStyleByString(doc, '2019 styles:TABLES:prices', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), '2019 styles:TABLES:prices', 'prices after $, up until commas') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[put full stop on end of story (bulleted)]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\z", bulletsAndNumberingListType:1280598644});		app.changeGrepPreferences.properties = ({changeTo:".$0"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[put full stop on hard returns (bulleted)]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\r", bulletsAndNumberingListType:1280598644});		app.changeGrepPreferences.properties = ({changeTo:".$0"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[put full stops after all bullets]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"([^.,;?!:~e])(\\s?)$", bulletsAndNumberingListType:1280598644});		app.changeGrepPreferences.properties = ({changeTo:"$1."});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[put full stops on bulleted lists]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"[^.?!^](?!\\n)$", bulletsAndNumberingListType:1280598644});		app.changeGrepPreferences.properties = ({changeTo:"$0."});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove all nonbreaking spaces]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~S"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove blank space at beginning of paragraph]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^\\s+?(.)"});		app.changeGrepPreferences.properties = ({changeTo:"$1"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove column breaks]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~M"});		app.changeGrepPreferences.properties = ({changeTo:"~b"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove hard returns after column breaks]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(~M)(~b)"});		app.changeGrepPreferences.properties = ({changeTo:"$1"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove paragraph breaks at beginning of paragraph]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^~b+"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove soft returns]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\n"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove space at end of story]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:" \\z"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove spaces at beginning of paragraph]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"^ +"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[remove trailing whitespace]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\s+$"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[replace column breaks with copyright symbol]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~M"});		app.changeGrepPreferences.properties = ({changeTo:"~2"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[replace copyright symbol with column breaks]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~2"});		app.changeGrepPreferences.properties = ({changeTo:"~M"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[replace digit, digit with digit,digit]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"(\\d), (\\d)"});		app.changeGrepPreferences.properties = ({changeTo:"$1,$2"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[replace page breaks with column breaks]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~P"});		app.changeGrepPreferences.properties = ({changeTo:"~M"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[select all caps paras]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\u\\u+(\\r?)$"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[select all prices after $]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\$[.,\\d]+"});		app.changeGrepPreferences.properties = ({});		style = getStyleByString(doc, '2019 styles:TABLES:prices', 'characterStyles');		if (!style.isValid) throw Error(localize(({en:"Missing change characterstyle [%1] for query [%2]", de:"Fehlendes Ersetze-Zeichenformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en remplacement un style de caractère manquant : [%1]", ja_JP:"クエリ[%2]の置換形式に設定された文字スタイル[%1]が見つかりませんでした"}), '2019 styles:TABLES:prices', 'select all prices after $') );		app.changeGrepPreferences.appliedCharacterStyle =  style;		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[SWAP L-R Alignment pt 1]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({justification:1919379572});		style = getStyleByString(doc, 'BIG HEADINGS WHITE', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find pagraphstyle [%1] for query [%2]", de:"Fehlendes Such-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'BIG HEADINGS WHITE', 'SWAP L-R Alignment pt 1') );		app.findGrepPreferences.appliedParagraphStyle =  style;		app.changeGrepPreferences.properties = ({justification:1667591796});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[SWAP L-R Alignment pt 2]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({justification:1818584692});		style = getStyleByString(doc, 'BIG HEADINGS WHITE', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find pagraphstyle [%1] for query [%2]", de:"Fehlendes Such-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'BIG HEADINGS WHITE', 'SWAP L-R Alignment pt 2') );		app.findGrepPreferences.appliedParagraphStyle =  style;		app.changeGrepPreferences.properties = ({justification:1919379572});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[SWAP L-R Alignment pt 3]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({justification:1667591796});		style = getStyleByString(doc, 'BIG HEADINGS WHITE', 'paragraphStyles');		if (!style.isValid) throw Error(localize(({en:"Missing find pagraphstyle [%1] for query [%2]", de:"Fehlendes Such-Absatzsformat [%1] bei Abfrage [%2]", fr:"La requête [%2] invoque en recherche un style de paragraphe manquant : [%1]", ja_JP:"クエリ[%2]の検索形式に設定された段落スタイル[%1]が見つかりませんでした"}), 'BIG HEADINGS WHITE', 'SWAP L-R Alignment pt 3') );		app.findGrepPreferences.appliedParagraphStyle =  style;		app.changeGrepPreferences.properties = ({justification:1818584692});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[swap little up arrow glyphs for spaces]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, kanaSensitive:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~S"});		app.changeGrepPreferences.properties = ({changeTo:" "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[Change Arabic Diacritic Color]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"ٌ|ُ|ً|َ|ٍ|ِ|ْ|ّ"});		app.changeGrepPreferences.properties = ({});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[Dash to En-dash]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"[~m~>~f~|~S~s~<~/~.~3~4~% ]+-[~m~>~f~|~S~s~<~/~.~3~4~% ]+|[~m~>~f~|~S~s~<~/~.~3~4~% ]+-|-[~m~>~f~|~S~s~<~/~.~3~4~% ]+"});		app.changeGrepPreferences.properties = ({changeTo:" ~= "});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[Multiple Return to Single Return]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"~b~b+"});		app.changeGrepPreferences.properties = ({changeTo:"\\r"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[Multiple Space to Single Space]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"[~m~>~f~|~S~s~<~/~.~3~4~% ]{2,}"});		app.changeGrepPreferences.properties = ({changeTo:"\\s"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;	// Query [[Phone Number Conversion (dot format)]] -- If you delete this comment you break the update function	try {		app.findChangeGrepOptions.properties = ({includeFootnotes:true, widthSensitive:true});		app.findGrepPreferences.properties = ({findWhat:"\\(?(\\d\\d\\d)\\)?[-. ]?(\\d\\d\\d)[-. ]?(\\d\\d\\d\\d)"});		app.changeGrepPreferences.properties = ({changeTo:"$1.$2.$3"});		changeObject.changeGrep();	} catch (e) {alert(e + ' at line ' + e.line)}	app.findChangeGrepOptions.properties = options;	app.findGrepPreferences = NothingEnum.NOTHING;	app.changeGrepPreferences = NothingEnum.NOTHING;};function getStyleByString(docOrGroup, string, property) {	if (string == '[No character style]') return docOrGroup[property][0];	if (string == '[No paragraph style]') return docOrGroup[property][0];	if (string == 'NormalParagraphStyle') return docOrGroup[property][1];	stringResult = string.match (/^(.*?[^\\]):(.*)$/);	var styleName = (stringResult) ? stringResult[1] : string;	styleName = styleName.replace (/\\:/g, ':');	remainingString = (stringResult) ? stringResult[2] : '';	var newProperty = (stringResult) ? property.replace(/s$/, '') + 'Groups' : property;	var styleOrGroup = docOrGroup[newProperty].itemByName(styleName);	if (remainingString.length > 0 && styleOrGroup.isValid) styleOrGroup = getStyleByString (styleOrGroup, remainingString, property);	return styleOrGroup;};