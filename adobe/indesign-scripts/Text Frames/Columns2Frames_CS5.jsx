//Columns2Frames.jsx/*	This InDesign script can be used for replacing textframe columns with individual text frames. 	//Original author: Steve Wareham, www.stevewareham.com	Updated for CS5 by Olav Martin Kvern		Select a textframe first, then run the script.*/if (parseFloat(app.version) < 6)doSwapitems();elseapp.doScript(doColumns2Frames, ScriptLanguage.JAVASCRIPT, undefined, UndoModes.ENTIRE_SCRIPT, "Columns to Frames");function doColumns2Frames(){main();function main(){	if ((app.selection.length != 1 )||(app.selection[0] != "[object TextFrame]")) {		alert("Please select a text frame and try again.");	}	else{		//Get properties of textframe			var myDocument = app.documents.item(0);		var myTextFrame = app.selection[0];		var myTextFramePrev = myTextFrame.previousTextFrame;		var myTextFrameNext = myTextFrame.nextTextFrame;		var myColAmount = myTextFrame.textFramePreferences.textColumnCount;		var myMultipleCols = myColAmount - 1;  //The cols. after the first one		var myTextFrameBounds =  myTextFrame.geometricBounds;		var myGutterWidth = myTextFrame.textFramePreferences.textColumnGutter;		var myColWidth = ( (myTextFrameBounds[3] - myTextFrameBounds[1]) - (myGutterWidth * myMultipleCols) ) / myColAmount; 		var myGutterAmount = myTextFrame.textFramePreferences.textColumnCount;		//Find the first textFrame in the thread that myTextFrame is in, get it's contents		myFirstTextFrame = myTextFrame; 		while (myFirstTextFrame.previousTextFrame == "[object TextFrame]"){			myFirstTextFrame = myFirstTextFrame.previousTextFrame;		}		var myContents = myFirstTextFrame.contents;		//Find the page to work on		var myPage = findPage(myTextFrame);			if (myPage == null)		{			alert("The text frame needs to be on a page for this script to run.");			myColAmount = 0; // Set myColAmount to 0 so the script doesn't run		}		// Create individual text frames if the original has more than one column		if (myColAmount > 1){			myTextFrame.name = "marked"; // Mark original textframe for removal			var myNewFrames = new Array();									//Create text frame for col. 1			myNewFrames[0] = myPage.textFrames.add();			myBounds = new Array();			myBounds[0] =myTextFrameBounds[0];			myBounds[1] = myTextFrameBounds[1];			myBounds[2] = myTextFrameBounds[2];			myBounds[3] = (myTextFrameBounds[1] +myColWidth);			myNewFrames[0].geometricBounds = myBounds;			myNewFrames[0].label = "0";			//Create text frames for col. 2 -> end			for (i = 1; i <= myMultipleCols; i ++){				myNewFrames[i] = myPage.textFrames.add();				myBounds[1] = myBounds[3] + myGutterWidth;				myBounds[3] = (myBounds[1] +myColWidth);				myNewFrames[i].geometricBounds = myBounds;				myNewFrames[i].label = (i + "") ;			}			//Link the new frames.			for (i =myMultipleCols; i > 0; i --){				j = i - 1;					myNewFrames[i].previousTextFrame = myNewFrames[j];				}						// If the text frame was part of a thread, relink the new frame to the thread			if (myTextFramePrev != null){ // If there was a frame before				myNewFrames[0].previousTextFrame = myTextFramePrev;			}			//If there was no frame before, but a frame after				if((myTextFrameNext != null)&&(myTextFramePrev == null)){				myNewFrames[myMultipleCols].nextTextFrame = myTextFrameNext;			}					 // if there are no frames before or after			if((myTextFramePrev == null)&&(myTextFrameNext == null)){ 				myDocument.textFrames.itemByName("marked").nextTextFrame = myNewFrames[0];			}			//Remove original textFrame			myDocument.textFrames.itemByName("marked").remove();		}	}}// Use the findPage function to get the page the textframe is onfunction findPage(theObj){	var thePage = theObj.parentPage;	return thePage  } }