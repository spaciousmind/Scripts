//DESCRIPTION: Converts selected text to title case smartly // Customize this script by either editing these arrays:var ignoreWords = ["a","an","and","the","to","with","in","on", "as","of","or","at","is","into","by","from","for"];var intCaps = ["PineRidge","InDesign","NJ","UMC"];// or by creating text files named ignoreWords.txt // and intCaps.txt in the script's folderignoreWords = getIgnoreFile(ignoreWords);intCaps = getIntCaps(intCaps);try { myText = app.selection[0].texts[0].contents;} catch(e) { exit();}theWords = myText.toLowerCase().split(" ");//First word must have a cap, but might have an internal capmyNewText = "";for (var j = 0; theWords.length > j; j++) { k = isIn(intCaps,theWords[j]) if (k > -1) {  myNewText = myNewText + intCaps[k] + " ";  continue; } else {  if ((isIn(ignoreWords,theWords[j]) > -1) && (j != 0)) {   myNewText = myNewText + theWords[j] + " ";  } else {   myNewText = myNewText + InitCap(theWords[j]) + " ";  } }}app.selection[0].texts[0].contents = myNewText.substring(0,myNewText.length - 1);// +++++++ Functions Start Here +++++++++++++++++++++++function getIgnoreFile(theWords) { var myFile = File(File(getScriptPath()).parent.fsName + "/ignoreWords.txt"); if (!myFile.exists) { return theWords } // File exists, so use it instead myFile.open("r"); var importedWords = myFile.read(); myFile.close(); return importedWords.split("\n"); // Could filter these, but what's the point?}function getIntCaps(theWords) { var myFile = File(File(getScriptPath()).parent.fsName + "/intCaps.txt"); if (!myFile.exists) { return theWords } // File exists, so use it instead myFile.open("r"); var importedWords = myFile.read(); myFile.close(); return importedWords.split("\n"); // Could filter these, but what's the point?}function getScriptPath() { // This function returns the path to the active script, even when running ESTK try {   return app.activeScript;  } catch(e) {   return e.fileName;  }}function isIn(aList,aWord) { for (var i = 0; aList.length > i; i++) {  if (aList[i].toLowerCase() == aWord) {   return i;  } } return -1;}function InitCap(aWord) { if (aWord.length == 1) {  return (aWord.toUpperCase()); } return (aWord.substr(0,1).toUpperCase() + aWord.substring(1,aWord.length))}